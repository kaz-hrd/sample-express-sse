{"version":3,"file":"MessageSender.js","sourceRoot":"","sources":["../../../src/client/components/MessageSender.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAK,EAAE,EAAE,QAAQ,EAAa,MAAM,OAAO,CAAC;AAEnD,OAAO,sCAAsC,CAAC;AAO9C,IAAM,SAAS,GAAG;IACV,IAAA,KAAkB,QAAQ,CAAY;QAC1C,OAAO,EAAE,EAAE;KACZ,CAAC,EAFK,IAAI,QAAA,EAAE,OAAO,QAElB,CAAC;IACG,IAAA,KAAoC,QAAQ,CAAU,KAAK,CAAC,EAA3D,aAAa,QAAA,EAAE,gBAAgB,QAA4B,CAAC;IACnE,IAAM,aAAa,GAAG,UAAC,CAAsC;QAC3D,OAAO,uBAAM,IAAI,KAAE,OAAO,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,IAAG,CAAC;IAChD,CAAC,CAAC;IACF,IAAM,WAAW,GAAG,UAAC,CAAqC;QACxD,CAAC;;;;6BACK,IAAI,CAAC,OAAO,EAAZ,wBAAY;wBACd,gBAAgB,CAAC,IAAI,CAAC,CAAC;wBACvB,UAAU,CAAC;4BACT,gBAAgB,CAAC,KAAK,CAAC,CAAC;wBAC1B,CAAC,EAAE,IAAI,CAAC,CAAC;wBACT,qBAAM,KAAK,CAAC,MAAM,EAAE;gCAClB,MAAM,EAAE,MAAM;gCACd,OAAO,EAAE;oCACP,cAAc,EAAE,kBAAkB;iCACnC;gCACD,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC;oCACnB,OAAO,EAAE,IAAI,CAAC,OAAO;iCACtB,CAAC;6BACH,CAAC,EAAA;;wBARF,SAQE,CAAC;wBACH,OAAO,uBAAM,IAAI,KAAE,YAAY,EAAE,IAAI,IAAI,EAAE,EAAE,OAAO,EAAE,EAAE,IAAG,CAAC;;;;;aAE/D,CAAC,EAAE,CAAC;IACP,CAAC,CAAC;IACF,OAAO,CACL;QACE,6BAAK,SAAS,EAAC,KAAK;YAClB,6BAAK,SAAS,EAAC,MAAM;gBACnB,6BAAK,SAAS,EAAC,aAAa,mBAAmB;gBAC/C,6BAAK,SAAS,EAAC,WAAW;oBACxB,6BAAK,SAAS,EAAC,MAAM;wBACnB,6BAAK,SAAS,EAAC,kBAAkB;4BAC/B,+BACE,IAAI,EAAC,MAAM,EACX,WAAW,EAAC,SAAS,EACrB,SAAS,EAAC,cAAc,EACxB,KAAK,EAAE,IAAI,CAAC,OAAO,EACnB,QAAQ,EAAE,aAAa,EACvB,QAAQ,EAAE,aAAa,GACvB;4BACF,gCACE,IAAI,EAAC,QAAQ,EACb,SAAS,EAAC,iBAAiB,EAC3B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,aAAa,WAGhB,CACL,CACF,CACF,CACF,CACF,CACL,CACJ,CAAC;AACJ,CAAC,CAAC;AAEF,eAAe,SAAS,CAAC","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ninterface InputForm {\r\n  message: string;\r\n  lastSendDate?: Date;\r\n}\r\n\r\nconst MsgSender = () => {\r\n  const [form, setForm] = useState<InputForm>({\r\n    message: '',\r\n  });\r\n  const [disabledState, setDisabledState] = useState<boolean>(false);\r\n  const updateMessage = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setForm({ ...form, message: e.target.value });\r\n  };\r\n  const sendMessage = (e: React.MouseEvent<HTMLInputElement>) => {\r\n    (async () => {\r\n      if (form.message) {\r\n        setDisabledState(true);\r\n        setTimeout(() => {\r\n          setDisabledState(false);\r\n        }, 5000);\r\n        await fetch('send', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            message: form.message,\r\n          }),\r\n        });\r\n        setForm({ ...form, lastSendDate: new Date(), message: '' });\r\n      }\r\n    })();\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"p-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Send Message</div>\r\n          <div className=\"card-body\">\r\n            <div className=\"mb-3\">\r\n              <div className=\"input-group mb-3\">\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Message\"\r\n                  className=\"form-control\"\r\n                  value={form.message}\r\n                  onChange={updateMessage}\r\n                  disabled={disabledState}\r\n                />\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={sendMessage}\r\n                  disabled={disabledState}\r\n                >\r\n                  Send\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MsgSender;\r\n"]}