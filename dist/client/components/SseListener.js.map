{"version":3,"file":"SseListener.js","sourceRoot":"","sources":["../../../src/client/components/SseListener.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { NotificationMsg } from '../../common/common';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\ntype MessageHistory = { index: number; received: Date; message: string };\r\ntype ClientInfo = { begin: string; id: string };\r\n\r\nconst SseListener = () => {\r\n  let messageCount = 1;\r\n  const [lastMessage, setLastMessage] = useState<string>();\r\n  const [messageList, setMessageList] = useState<MessageHistory[]>([]);\r\n  const [lastPingTime, setLastPingTime] = useState<Date>();\r\n  const [clientList, setClientList] = useState<ClientInfo[]>(\r\n    new Array<ClientInfo>()\r\n  );\r\n  const [audioStatus, setAudioStatus] = useState<string>();\r\n\r\n  const addMessage = (message: string) => {\r\n    const date = new Date();\r\n    messageList.push({\r\n      index: messageCount++,\r\n      message: message,\r\n      received: date,\r\n    });\r\n    if (messageList.length == 6) {\r\n      messageList.shift();\r\n    }\r\n    setMessageList(messageList);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const music = new Audio('alert.mp3');\r\n    const evtSource: EventSource = new EventSource('sse', {\r\n      withCredentials: true,\r\n    });\r\n    evtSource.onmessage = (e: MessageEvent) => {\r\n      console.log(e.data);\r\n      const data = JSON.parse(e.data) as NotificationMsg;\r\n      switch (data.mode) {\r\n        case 'ping':\r\n          setLastPingTime(new Date());\r\n          break;\r\n        case 'notify':\r\n          music\r\n            .play()\r\n            .then(() => {\r\n              setAudioStatus('done.');\r\n            })\r\n            .catch((e) => {\r\n              setAudioStatus('error.');\r\n            });\r\n          if (data.message) {\r\n            addMessage(data.message);\r\n            setLastMessage(data.message);\r\n            setTimeout(() => {\r\n              setLastMessage('');\r\n            }, 5000);\r\n          }\r\n          break;\r\n        case 'clientList':\r\n          if (data.data) {\r\n            setClientList(JSON.parse(data.data));\r\n          }\r\n          break;\r\n      }\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"p-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">List of Messages.</div>\r\n          <div className=\"card-body\">\r\n            <div>\r\n              {lastMessage && (\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {lastMessage}\r\n                </div>\r\n              )}\r\n            </div>\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">seq</th>\r\n                  <th scope=\"col\">received</th>\r\n                  <th scope=\"col\">message</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {messageList.map((item: MessageHistory) => {\r\n                  return (\r\n                    <tr key={item.index}>\r\n                      <td>{item.index}</td>\r\n                      <td>{item.received.toISOString()}</td>\r\n                      <td>{item.message}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">List of Clients.</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">id</th>\r\n                  <th scope=\"col\">begin</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {clientList.map((item: ClientInfo) => {\r\n                  return (\r\n                    <tr key={item.id}>\r\n                      <td>{item.id}</td>\r\n                      <td>{item.begin ? item.begin : 'Unkown'}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-3\">\r\n        <div className=\"card\">\r\n          <div className=\"card-header\">Other.</div>\r\n          <div className=\"card-body\">\r\n            <table className=\"table table-striped table-hover\">\r\n              <tbody>\r\n                <tr>\r\n                  <td>Last message received</td>\r\n                  <td>\r\n                    {messageList &&\r\n                      messageList.length > 0 &&\r\n                      messageList[\r\n                        messageList.length - 1\r\n                      ].received.toISOString()}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Last ping received</td>\r\n                  <td>{lastPingTime && lastPingTime.toISOString()}</td>\r\n                </tr>\r\n                <tr>\r\n                  <td>Status of audio</td>\r\n                  <td>{audioStatus}</td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SseListener;\r\n"]}